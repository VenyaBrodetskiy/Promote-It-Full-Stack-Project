@using BlazorWASM.Services
@inject ILogger<NavMenu> logger;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=@Page.Home>ProLobby Owner page</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href=@Page.Users>
                <span class="oi oi-list-rich" aria-hidden="true"></span> Users
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href=@Page.Campaigns>
                <span class="oi oi-list-rich" aria-hidden="true"></span> Campaigns
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href=@Page.Tweets>
                <span class="oi oi-list-rich" aria-hidden="true"></span> Tweets
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick=OnLogoutClick>
                <span class="oi oi-home" aria-hidden="true"></span> Logout
            </NavLink>
        </div>
    </nav>
</div>

@code {

    [Inject]
    public IAuthenticationService AuthenticationService { get; set; }
    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task OnLogoutClick()
    {
        try
        {
            logger.LogInformation("Logout user started...");
            await AuthenticationService.Logout();
            logger.LogInformation("Logged out successfully, navigating to {page}", Page.Login);
            NavigationManager.NavigateTo(Page.Login);
        }
        catch (Exception ex)
        {
            logger.LogError("Smth wrong while trying to log out: {message}", ex.Message);
        }
        
    }
}
